1.  Объясните основную идею ISP и почему он включает в себя несколько интерфейсов, ориентированных на 
конкретного клиента, вместо одного интерфейса общего назначения.
- Принцип ISP гласит о том, что лучше иметь несколько узких интерфейсов, ориентированных на конкретного клиента
чем один общий интерфейс. Это делается для избежания зависимости клиентов от ненужных методов
снижения связности и обеспечения гибкости.

2.  Приведите пример сценария, в котором следование ISP привело бы к улучшению дизайна программного обеспечения.
- Вместо создания одного интерфейса для работы с разными типами баз данных (MySQL, PostgreSQL, MongoDB) 
следуя ISP, мы создаем отдельные интерфейсы для каждого типа базы данных. Это позволит клиентам 
использовать только необходимые методы, избегая зависимости от неиспользуемых функций и упрощая дизайн.

3.  Почему принцип DIP предполагает, что модули более высокого уровня не должны зависеть от модулей более 
низкого уровня, и какую альтернативу предлагает этот принцип?
- Принцип DIP предполагает, что модули высшего уровня не должны зависеть от модулей нижнего уровня, а от абстракций. 
Это обеспечивает гибкость и уменьшает связность, позволяя заменять или расширять компоненты системы без изменения клиентского кода.

4.  Что означает выражение "зависеть от абстракций, а не от конкретики" и как оно помогает в создании более 
гибкого и сопровождаемого программного обеспечения?
- Означает программирование на уровне абстракций, а не конкретных реализаций. 
Использование абстракций позволяет легко заменять или расширять компоненты системы не затрагивая клиентский код, 
что делает программное обеспечение более гибким и легко сопровождаемым.