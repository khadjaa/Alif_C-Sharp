1. Объясните логические условные операторы AND (&&) и OR ("||") в C# и когда они возвращают истину.
- используются для комбинирования логических выражений. Оператор AND (&&) возвращает true 
только в том случае если оба операнда являются true. 
Оператор OR (||) возвращает true, если хотя бы один из операндов является true.

2. В чем разница между логическими операторами AND (&) и OR (|) и их условными аналогами (&& и "||" )?
- Разница заключается в том что условные операторы (&& и ||) могут выполнять ленивое вычисление. 
Если первый операнд в условном выражении уже определяет результат то второй операнд может быть пропущен. 
В случае обычных логических операторов (& и |) оба операнда всегда вычисляются.

3. Какова роль оператора "else" и когда он выполняется по отношению к оператору "if"?
- Оператор else используется в паре с оператором if. Если условие оператора if не выполняется (возвращает false) 
то блок кода в операторе else выполняется. Это предоставляет альтернативный путь 
выполнения кода в случае если условие if не истинно.

4. Каково назначение оператора "switch" в C# и чем он отличается от структуры "if-else"?
- Оператор switch предоставляет удобный способ выбора одной из множества альтернатив 
основанных на значении выражения. В отличие от структуры if-else 
которая проверяет условия последовательно switch сопоставляет значение выражения с различными шаблонами.

5. Опишите компоненты выражения switch, включая выражение, плечи выражения switch и шаблоны.
- Выражение: Значение которое будет проверено в различных ветвях switch.
- Плечи выражения switch: Каждая ветвь switch содержащая шаблон и код который 
будет выполнен если выражение совпадает с этим шаблоном.
- Шаблоны: Значения с которыми сравнивается выражение.

6. Приведите пример выражения switch в C#, демонстрирующий, как оно преобразует значения на основе сопоставления шаблонов.

int dayOfWeek = 3;
string dayName;

switch (dayOfWeek)
{
    case 1:
        dayName = "Monday";
        break;
    case 2:
        dayName = "Tuesday";
        break;
    case 3:
        dayName = "Wednesday";
        break;
    default:
        dayName = "Other day";
        break;
}


//1. Объявите две переменные age и isStudent. Напишите условие, которое 
//будет истинным, если возраст (age) больше 18 и человек не является студентом (isStudent равно false).

int age = 18;
bool isStudent = false;

if (age > 18 && isStudent)
{
  Console.WriteLine("Student");
}
else
{
  Console.WriteLine("Not a student");
}

2. Напишите программу, которая выводит числа от 1 до 100. Если число делится на 3, выведите "Fizz".
Если число делится на 5, выведите "Buzz". Если число делится и на 3, и на 5, выведите "FizzBuzz". 
В противном случае выведите само число.

for (int i = 0; i <= 100; i++)
{
 if (i % 3 == 0 & i % 5 == 0)
 {
   Console.WriteLine("FizzBuzz");
 } else if (i % 5 == 0)
 {
   Console.WriteLine("Buzz");
 } else if (i % 3 == 0)
 {
     Console.WriteLine("Fizz");
 }
}

3. Даны две логические переменные, a и b. Напишите выражение, которое равно 
true только в том случае, если ровно одна из переменных a или b равна true.

bool a = true;
bool b = true;
            
bool result = (a ^ b);
Console.WriteLine(result);

4.  У вас есть массив чисел. Напишите программу, которая выводит сумму всех нечетных чисел в массиве.

int[] numbers = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
int sumOfOdds = 0;

foreach (int number in numbers)
{
  if (number % 2 != 0)
  {
    sumOfOdds += number;
  }
}
Console.WriteLine(sumOfOdds);