- Лямбда-выражение в C#  это краткая форма для определения анонимных методов. 
Лямбда-выражения обеспечивают более компактный и удобный синтаксис для создания функций
особенно в контексте использования делегатов и LINQ.

Пример лямбда-выражения без модификатора static:

Func<int, int, int> add = (a, b) => a + b;
int result = add(2, 3);

Теперь с модификатором static:

Func<int, int, int> multiply = static (a, b) => a * b;
int result = multiply(2, 3);

Модификатор static в лямбда-выражении говорит компилятору, 
что данная лямбда не должна захватывать переменные из внешнего контекста (например, из замыкания)
и она может использовать только статические переменные или методы.

Лямбда-выражения широко используются в LINQ-запросах, обработке коллекций, 
асинхронном программировании и других сценариях где удобными являются 
компактный синтаксис и возможность передавать функции в качестве аргументов
или возвращать их из методов.


- Модификатор in в C# указывает что параметр передается по ссылке только для чтения. 
Он предотвращает изменение значения параметра внутри метода обеспечивая безопасность только для чтения.

class Program
{
    static void Main()
    {
        int number = 10;
        Console.WriteLine($"Before: {number}");

        ModifyInParam(in number);

        Console.WriteLine($"After: {number}");
    }

    static void ModifyInParam(in int value)
    {
        // Невозможно изменить параметр с модификатором 'in'
        // value = value + 5; // Ошибка компиляции
    }
}