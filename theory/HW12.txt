1.  Объясните концепцию "частичных классов" в C#. 
В каких ситуациях желательно разбить определение класса на части?
- Это механизм позволяющий разбить определение одного класса на 
несколько частей в разных файлах. Частичные классы обычно используются для разделения 
больших классов на логически связанные части улучшая поддерживаемость кода.

2.  Опишите сценарии, в которых частичные методы могут использоваться в рамках частичного класса. 
Когда для частичного метода требуется реализация, а когда она не требуется?
- Частичные методы позволяют определить метод в одной части частичного класса а его реализацию 
предоставить в другой части. Реализация частичного метода может быть пропущена
если он не нужен. Это полезно например когда автоматически сгенерированный 
код может предоставить реализацию метода.

3.  Каково назначение модификатора "sealed", применяемого к классу в C#? 
Как он влияет на наследование в объектно-ориентированном программировании?
- Применяется к классу в C# и предотвращает дальнейшее наследование этого класса. 
Запечатывание класса означает что другие классы не могут наследоваться от него
создавая новые функциональности или изменяя его поведение.

4.  Дайте определение понятию "статический класс" в C#. Что отличает статический класс от 
обычного класса?
- Это класс который не может быть инстанциирован и все его члены являются статическими. 
Статические классы предоставляют удобный способ организации методов и свойств
не требуя создания экземпляра класса.

5.  Опишите обстоятельства, в которых вы могли бы использовать статический метод. 
Чем статический метод отличается от метода экземпляра?
- Статические методы привязаны к классу а не к экземпляру объекта. 
Они могут использоваться в сценариях где операции не требуют доступа к 
состоянию конкретного объекта. Статические методы вызываются через имя класса
в то время как методы экземпляра требуют создания объекта перед вызовом.