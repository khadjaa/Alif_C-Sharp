1.  Как абстракция помогает программисту упростить и оптимизировать код?
- Помогает скрыть детали реализации, фокусируясь 
на ключевых аспектах, упрощая код и повышая его эффективность.

2.  Какое отношение абстракция имеет к именованию сущности и выбору важных атрибутов и поведения?
- Абстракция связана с выделением ключевых характеристик, 
именованием сущностей и определением их важного поведения.

3.  Как абстракция реализована в C#, и какие ключевые элементы для этого используются?
- Абстракция в C# реализуется через абстрактные классы и интерфейсы.

4.  Как создать и использовать абстрактный класс в C#? Каковы основные принципы инкапсуляции 
для объединения данных и методов в единое целое?
- Создание абстрактного класса с ключевым словом abstract, принципы 
инкапсуляции объединяют данные и методы внутри класса.

5.  В чем разница между полями и методами, обозначенными как private, public и protected?
- Private: Доступ только внутри класса.
  Public: Публичный доступ из любого места.
  Protected: Доступ внутри класса и его производных.

6.  Приведите пример использования инкапсуляции в C# на примере класса BankAccount. 
Какие методы обеспечивают контролируемый доступ к данным класса?
- BankAccount: Методы Deposit и Withdraw обеспечивают контролируемый доступ к данным класса.