1.  Как принцип единой ответственности (SRP) помогает улучшить разработку программного 
обеспечения и в чем его основная идея?
- Каждый класс должен иметь только одну причину для изменения. Улучшает поддерживаемость 
кода, уменьшает зависимости между модулями, облегчает тестирование.

2.  Почему SRP иногда трудно реализовать, особенно когда обязанности класса не сразу ясны?
- Неясность обязанностей класса, смешивание различных функций в одном классе.

3.  Как принцип открытости/закрытости (OCP) способствует расширению программных модулей, 
не требуя их модификации?
-  Программные сущности должны быть открыты для расширения, но закрыты для модификации.
Позволяет добавлять новую функциональность без изменения существующего кода.

4.  Почему в соответствии с OCP важно, чтобы модули были открыты для расширения, но 
закрыты для модификации?
- Добавление нового функционала без изменения старого кода.
Предотвращает изменение существующих модулей для внесения изменений.

5.  Какая фундаментальная концепция лежит в основе принципа замещения Лискова (LSP), 
когда речь идет о подклассах и базовых классах?
- Объекты подклассов должны быть заменяемы объектами базового класса без изменения корректности программы.

6.  Как принцип замещения Лискова (LSP) гарантирует, что родительские экземпляры могут 
заменять дочерние экземпляры без неожиданного поведения?
- Заменяемость подклассов обеспечивает сохранение контрактов базовых классов.