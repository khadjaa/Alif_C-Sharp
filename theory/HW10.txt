1. Дайте определение термину "пространство имен" в контексте языка C#. 
Объясните его назначение и то, как оно помогает организовать элементы кода. 
- Механизм для организации и группировки элементов кода. 
Предотвращает конфликты имен и обеспечивает структурирование кода.

2. Опишите концепцию объявлений пространств имен с копированием файлов в C# 10. 
Чем они отличаются от обычных пространств имен? 
- Это новая концепция в C# 10 позволяющая группировать 
файлы вместе с пространствами имен для улучшенной организации кода.

3. Объясните значение неизменяемости в типах записей. Приведите примеры 
сценариев, в которых неизменяемость является критически важной. 
- Неизменяемость гарантирует что экземпляры типов записей не могут быть изменены после создания. 
Важна для безопасности и предсказуемости кода.

4. Дайте определение и различие между понятиями "класс записи" и 
"структура записи" в C# 10. Приведите примеры кода для обоих типов. 
- Оба предоставляют неизменяемость но класс записи является ссылочным типом
а структура записи значимым типом.

5. Какие типы структур существуют в C#? Объясните фундаментальные 
характеристики, которые отличают их от типов классов. 
- Включают примитивные типы данных такие как int, float, а также 
пользовательские структуры. Отличаются от классов тем что передаются по значению.

6. Обсудите концепцию передачи по значению и передачи по ссылке при работе с 
типами struct. Как можно избежать копирования значений для больших структурных типов?
- Структуры передаются по значению, что может привести к копированию больших данных. 
Чтобы избежать этого можно использовать ключевое слово in при передаче в метод 
чтобы избежать копирования значений.