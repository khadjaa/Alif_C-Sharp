// <auto-generated />
using System;
using Erm.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Erm.DataAccess.Migrations
{
    [DbContext(typeof(ErmDbContext))]
    partial class ErmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Erm.DataAccess.BusinessProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("domain");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("business_process", (string)null);
                });

            modelBuilder.Entity("Erm.DataAccess.Risk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OccurrenceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OccurrenceProbability")
                        .HasColumnType("int");

                    b.Property<int>("PotentialBusinessImpact")
                        .HasColumnType("int");

                    b.Property<string>("PotentialSolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Risk");
                });

            modelBuilder.Entity("Erm.DataAccess.RiskProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessProcessId")
                        .HasColumnType("int")
                        .HasColumnName("business_process_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("description");

                    b.Property<int>("OccurreceProbability")
                        .HasColumnType("INTEGER")
                        .HasColumnName("occurrece_probability");

                    b.Property<int>("PotentialBusinessImpact")
                        .HasColumnType("INTEGER")
                        .HasColumnName("potential_business_impact");

                    b.Property<string>("PotentialSolution")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("potential_solution");

                    b.Property<int>("RiskId")
                        .HasColumnType("int");

                    b.Property<string>("RiskName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("risk_name");

                    b.HasKey("Id");

                    b.HasIndex("BusinessProcessId");

                    b.HasIndex("RiskId");

                    b.ToTable("risk_profile", (string)null);
                });

            modelBuilder.Entity("Erm.DataAccess.RiskProfile", b =>
                {
                    b.HasOne("Erm.DataAccess.BusinessProcess", "BusinessProcess")
                        .WithMany("RiskProfiles")
                        .HasForeignKey("BusinessProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Erm.DataAccess.Risk", "Risk")
                        .WithMany()
                        .HasForeignKey("RiskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessProcess");

                    b.Navigation("Risk");
                });

            modelBuilder.Entity("Erm.DataAccess.BusinessProcess", b =>
                {
                    b.Navigation("RiskProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
